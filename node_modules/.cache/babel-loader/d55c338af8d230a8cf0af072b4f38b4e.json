{"ast":null,"code":"var _jsxFileName = \"E:\\\\N4\\\\NewC\\\\youtube2022\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Add from \"../img/addAvatar.png\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = () => {\n  _s();\n  const [err, setErr] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const displayName = e.target[0].value;\n    const email = e.target[1].value;\n    const password = e.target[2].value;\n    const file = e.target[3].file[0];\n    try {\n      const res = await createUserWithEmailAndPassword(auth, email, password);\n      const storage = getStorage();\n      const storageRef = ref(storage, 'images/rivers.jpg');\n      const uploadTask = uploadBytesResumable(storageRef, file);\n\n      // Register three observers:\n      // 1. 'state_changed' observer, called any time the state changes\n      // 2. Error observer, called on failure\n      // 3. Completion observer, called on successful completion\n      uploadTask.on('state_changed', snapshot => {\n        // Observe state change events such as progress, pause, and resume\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case 'paused':\n            console.log('Upload is paused');\n            break;\n          case 'running':\n            console.log('Upload is running');\n            break;\n        }\n      }, error => {\n        // Handle unsuccessful uploads\n      }, () => {\n        // Handle successful uploads on complete\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log('File available at', downloadURL);\n        });\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"SChat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"display name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: \"none\"\n          },\n          type: \"file\",\n          id: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Add,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add an avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You do have an account? Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"dprAdd8GTbKfpG5CwPk/p+uACaE=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Add","createUserWithEmailAndPassword","ref","uploadBytesResumable","getDownloadURL","auth","Register","err","setErr","handleSubmit","e","preventDefault","displayName","target","value","email","password","file","res","storage","getStorage","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","error","then","downloadURL","display"],"sources":["E:/N4/NewC/youtube2022/src/pages/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Add from \"../img/addAvatar.png\"\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\nimport { auth } from \"../firebase\";\r\n\r\nexport const Register = () => {\r\n  const [err,setErr] = useState(false)\r\n  const handleSubmit = async (e)=>{\r\n    e.preventDefault()\r\n    const displayName = e.target[0].value;\r\n    const email = e.target[1].value;\r\n    const password = e.target[2].value;\r\n    const file = e.target[3].file[0];\r\n\r\n    try{\r\n      const res = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\nconst storage = getStorage();\r\nconst storageRef = ref(storage, 'images/rivers.jpg');\r\n\r\nconst uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n// Register three observers:\r\n// 1. 'state_changed' observer, called any time the state changes\r\n// 2. Error observer, called on failure\r\n// 3. Completion observer, called on successful completion\r\nuploadTask.on('state_changed', \r\n  (snapshot) => {\r\n    // Observe state change events such as progress, pause, and resume\r\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n    console.log('Upload is ' + progress + '% done');\r\n    switch (snapshot.state) {\r\n      case 'paused':\r\n        console.log('Upload is paused');\r\n        break;\r\n      case 'running':\r\n        console.log('Upload is running');\r\n        break;\r\n    }\r\n  }, \r\n  (error) => {\r\n    // Handle unsuccessful uploads\r\n  }, \r\n  () => {\r\n    // Handle successful uploads on complete\r\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n      console.log('File available at', downloadURL);\r\n    });\r\n  }\r\n);\r\n    }catch(err){\r\n      setErr(true);\r\n    } \r\n  }\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <div className=\"formWrapper\">\r\n        <span className=\"logo\">SChat</span>\r\n        <span className=\"title\">Register</span>\r\n        <form onSubmit={handleSubmit} />\r\n        <form>\r\n          <input type=\"text\" placeholder=\"display name\"/>\r\n          <input type=\"text\" placeholder=\"email\"/>\r\n          <input type=\"text\" placeholder=\"password\"/>\r\n          <input style={{display:\"none\"}} type=\"file\" id=\"file\"/>\r\n          <label htmlFor=\"file\">\r\n            <img src={Add} alt=''/>\r\n            <span>Add an avatar</span>\r\n          </label>\r\n          <button>Sign up</button>\r\n          {err && <span>Something went wrong</span>}\r\n        </form>\r\n        <p>You do have an account? Login</p> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}